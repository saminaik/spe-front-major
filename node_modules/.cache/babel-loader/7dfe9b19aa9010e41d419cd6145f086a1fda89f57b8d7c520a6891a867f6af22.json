{"ast":null,"code":"var _jsxFileName = \"/Users/samiullahnaikoo/Desktop/my-react-app/my-react-app/src/components/PatientRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  firstName: yup.string().required(\"First name is required\"),\n  lastName: yup.string().required(\"Last name is required\"),\n  email: yup.string().email().required(\"Email is required\"),\n  password: yup.string().required(\"Password is required\"),\n  phoneNumber: yup.string().required(\"Phone number is required\"),\n  address: yup.string().required(\"Address is required\")\n});\nconst PatientRegistration = () => {\n  _s();\n  var _errors$firstName, _errors$lastName, _errors$email, _errors$password, _errors$phoneNumber, _errors$address;\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = async data => {\n    setIsLoading(true);\n\n    // Here you can make an API call to submit the data to your backend server\n\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"firstName\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Last Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"lastName\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"phoneNumber\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_errors$phoneNumber = errors.phoneNumber) === null || _errors$phoneNumber === void 0 ? void 0 : _errors$phoneNumber.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"address\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isLoading,\n      children: isLoading ? \"Submitting...\" : \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientRegistration, \"tLe+GK58LeLsJvYuVSNiDjHCnuw=\", false, function () {\n  return [useForm];\n});\n_c = PatientRegistration;\nexport default PatientRegistration;\nvar _c;\n$RefreshReg$(_c, \"PatientRegistration\");","map":{"version":3,"names":["React","useState","useForm","yupResolver","yup","jsxDEV","_jsxDEV","schema","object","shape","firstName","string","required","lastName","email","password","phoneNumber","address","PatientRegistration","_s","_errors$firstName","_errors$lastName","_errors$email","_errors$password","_errors$phoneNumber","_errors$address","isLoading","setIsLoading","register","handleSubmit","errors","resolver","onSubmit","data","children","fileName","_jsxFileName","lineNumber","columnNumber","name","ref","message","type","disabled","_c","$RefreshReg$"],"sources":["/Users/samiullahnaikoo/Desktop/my-react-app/my-react-app/src/components/PatientRegister.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  firstName: yup.string().required(\"First name is required\"),\n  lastName: yup.string().required(\"Last name is required\"),\n  email: yup.string().email().required(\"Email is required\"),\n  password: yup.string().required(\"Password is required\"),\n  phoneNumber: yup.string().required(\"Phone number is required\"),\n  address: yup.string().required(\"Address is required\"),\n});\n\nconst PatientRegistration = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = async (data) => {\n    setIsLoading(true);\n\n    // Here you can make an API call to submit the data to your backend server\n\n    setIsLoading(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div>\n        <label>First Name:</label>\n        <input name=\"firstName\" ref={register} />\n        <p>{errors.firstName?.message}</p>\n      </div>\n      <div>\n        <label>Last Name:</label>\n        <input name=\"lastName\" ref={register} />\n        <p>{errors.lastName?.message}</p>\n      </div>\n      <div>\n        <label>Email:</label>\n        <input name=\"email\" ref={register} />\n        <p>{errors.email?.message}</p>\n      </div>\n      <div>\n        <label>Password:</label>\n        <input type=\"password\" name=\"password\" ref={register} />\n        <p>{errors.password?.message}</p>\n      </div>\n      <div>\n        <label>Phone Number:</label>\n        <input name=\"phoneNumber\" ref={register} />\n        <p>{errors.phoneNumber?.message}</p>\n      </div>\n      <div>\n        <label>Address:</label>\n        <input name=\"address\" ref={register} />\n        <p>{errors.address?.message}</p>\n      </div>\n      <button type=\"submit\" disabled={isLoading}>\n        {isLoading ? \"Submitting...\" : \"Submit\"}\n      </button>\n    </form>\n  );\n};\n\nexport default PatientRegistration;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}